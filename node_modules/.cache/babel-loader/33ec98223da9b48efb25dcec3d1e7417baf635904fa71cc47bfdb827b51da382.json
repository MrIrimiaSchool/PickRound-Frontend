{"ast":null,"code":"'use client';\n\nimport { useMemo } from 'react';\nimport { createToastFn } from './create-toast-fn.mjs';\nimport { useToastOptionContext } from './toast.provider.mjs';\nimport { useChakra } from '../system/hooks.mjs';\nfunction useToast(options) {\n  const {\n    theme\n  } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(() => createToastFn(theme.direction, {\n    ...defaultOptions,\n    ...options\n  }), [options, theme.direction, defaultOptions]);\n}\nexport { useToast };","map":{"version":3,"names":["useMemo","createToastFn","useToastOptionContext","useChakra","useToast","options","theme","defaultOptions","direction"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/node_modules/@chakra-ui/react/dist/esm/toast/use-toast.mjs"],"sourcesContent":["'use client';\r\nimport { useMemo } from 'react';\r\nimport { createToastFn } from './create-toast-fn.mjs';\r\nimport { useToastOptionContext } from './toast.provider.mjs';\r\nimport { useChakra } from '../system/hooks.mjs';\r\n\r\nfunction useToast(options) {\r\n  const { theme } = useChakra();\r\n  const defaultOptions = useToastOptionContext();\r\n  return useMemo(\r\n    () => createToastFn(theme.direction, {\r\n      ...defaultOptions,\r\n      ...options\r\n    }),\r\n    [options, theme.direction, defaultOptions]\r\n  );\r\n}\r\n\r\nexport { useToast };\r\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,qBAAqB,QAAQ,sBAAsB;AAC5D,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,SAASC,QAAQA,CAACC,OAAO,EAAE;EACzB,MAAM;IAAEC;EAAM,CAAC,GAAGH,SAAS,CAAC,CAAC;EAC7B,MAAMI,cAAc,GAAGL,qBAAqB,CAAC,CAAC;EAC9C,OAAOF,OAAO,CACZ,MAAMC,aAAa,CAACK,KAAK,CAACE,SAAS,EAAE;IACnC,GAAGD,cAAc;IACjB,GAAGF;EACL,CAAC,CAAC,EACF,CAACA,OAAO,EAAEC,KAAK,CAACE,SAAS,EAAED,cAAc,CAC3C,CAAC;AACH;AAEA,SAASH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}