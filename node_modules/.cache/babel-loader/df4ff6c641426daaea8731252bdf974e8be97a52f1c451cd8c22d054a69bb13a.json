{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { useFormControlContext, useFormControlStyles } from './form-control.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = field?.getLabelProps(rest, ref) ?? {\n    ref,\n    ...rest\n  };\n  return /* @__PURE__ */jsxs(chakra.label, {\n    ...ownProps,\n    className: cx(\"chakra-form__label\", props.className),\n    __css: {\n      display: \"block\",\n      textAlign: \"start\",\n      ...styles\n    },\n    children: [children, field?.isRequired ? requiredIndicator : optionalIndicator]\n  });\n});\nFormLabel.displayName = \"FormLabel\";\nconst RequiredIndicator = forwardRef(function RequiredIndicator2(props, ref) {\n  const field = useFormControlContext();\n  const styles = useFormControlStyles();\n  if (!field?.isRequired) return null;\n  const className = cx(\"chakra-form__required-indicator\", props.className);\n  return /* @__PURE__ */jsx(chakra.span, {\n    ...field?.getRequiredIndicatorProps(props, ref),\n    __css: styles.requiredIndicator,\n    className\n  });\n});\nRequiredIndicator.displayName = \"RequiredIndicator\";\nexport { FormLabel, RequiredIndicator };","map":{"version":3,"names":["jsxs","jsx","omitThemingProps","cx","useFormControlContext","useFormControlStyles","forwardRef","useStyleConfig","chakra","FormLabel","FormLabel2","passedProps","ref","styles","props","className","children","requiredIndicator","RequiredIndicator","optionalIndicator","rest","field","ownProps","getLabelProps","label","__css","display","textAlign","isRequired","displayName","RequiredIndicator2","span","getRequiredIndicatorProps"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/node_modules/@chakra-ui/react/dist/esm/form-control/form-label.mjs"],"sourcesContent":["'use client';\r\nimport { jsxs, jsx } from 'react/jsx-runtime';\r\nimport { omitThemingProps } from '@chakra-ui/styled-system';\r\nimport { cx } from '@chakra-ui/utils';\r\nimport { useFormControlContext, useFormControlStyles } from './form-control.mjs';\r\nimport { forwardRef } from '../system/forward-ref.mjs';\r\nimport { useStyleConfig } from '../system/use-style-config.mjs';\r\nimport { chakra } from '../system/factory.mjs';\r\n\r\nconst FormLabel = forwardRef(\r\n  function FormLabel2(passedProps, ref) {\r\n    const styles = useStyleConfig(\"FormLabel\", passedProps);\r\n    const props = omitThemingProps(passedProps);\r\n    const {\r\n      className,\r\n      children,\r\n      requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\r\n      optionalIndicator = null,\r\n      ...rest\r\n    } = props;\r\n    const field = useFormControlContext();\r\n    const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest };\r\n    return /* @__PURE__ */ jsxs(\r\n      chakra.label,\r\n      {\r\n        ...ownProps,\r\n        className: cx(\"chakra-form__label\", props.className),\r\n        __css: {\r\n          display: \"block\",\r\n          textAlign: \"start\",\r\n          ...styles\r\n        },\r\n        children: [\r\n          children,\r\n          field?.isRequired ? requiredIndicator : optionalIndicator\r\n        ]\r\n      }\r\n    );\r\n  }\r\n);\r\nFormLabel.displayName = \"FormLabel\";\r\nconst RequiredIndicator = forwardRef(\r\n  function RequiredIndicator2(props, ref) {\r\n    const field = useFormControlContext();\r\n    const styles = useFormControlStyles();\r\n    if (!field?.isRequired)\r\n      return null;\r\n    const className = cx(\"chakra-form__required-indicator\", props.className);\r\n    return /* @__PURE__ */ jsx(\r\n      chakra.span,\r\n      {\r\n        ...field?.getRequiredIndicatorProps(props, ref),\r\n        __css: styles.requiredIndicator,\r\n        className\r\n      }\r\n    );\r\n  }\r\n);\r\nRequiredIndicator.displayName = \"RequiredIndicator\";\r\n\r\nexport { FormLabel, RequiredIndicator };\r\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,IAAI,EAAEC,GAAG,QAAQ,mBAAmB;AAC7C,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,qBAAqB,EAAEC,oBAAoB,QAAQ,oBAAoB;AAChF,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,cAAc,QAAQ,gCAAgC;AAC/D,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,SAAS,GAAGH,UAAU,CAC1B,SAASI,UAAUA,CAACC,WAAW,EAAEC,GAAG,EAAE;EACpC,MAAMC,MAAM,GAAGN,cAAc,CAAC,WAAW,EAAEI,WAAW,CAAC;EACvD,MAAMG,KAAK,GAAGZ,gBAAgB,CAACS,WAAW,CAAC;EAC3C,MAAM;IACJI,SAAS;IACTC,QAAQ;IACRC,iBAAiB,GAAG,eAAgBhB,GAAG,CAACiB,iBAAiB,EAAE,CAAC,CAAC,CAAC;IAC9DC,iBAAiB,GAAG,IAAI;IACxB,GAAGC;EACL,CAAC,GAAGN,KAAK;EACT,MAAMO,KAAK,GAAGjB,qBAAqB,CAAC,CAAC;EACrC,MAAMkB,QAAQ,GAAGD,KAAK,EAAEE,aAAa,CAACH,IAAI,EAAER,GAAG,CAAC,IAAI;IAAEA,GAAG;IAAE,GAAGQ;EAAK,CAAC;EACpE,OAAO,eAAgBpB,IAAI,CACzBQ,MAAM,CAACgB,KAAK,EACZ;IACE,GAAGF,QAAQ;IACXP,SAAS,EAAEZ,EAAE,CAAC,oBAAoB,EAAEW,KAAK,CAACC,SAAS,CAAC;IACpDU,KAAK,EAAE;MACLC,OAAO,EAAE,OAAO;MAChBC,SAAS,EAAE,OAAO;MAClB,GAAGd;IACL,CAAC;IACDG,QAAQ,EAAE,CACRA,QAAQ,EACRK,KAAK,EAAEO,UAAU,GAAGX,iBAAiB,GAAGE,iBAAiB;EAE7D,CACF,CAAC;AACH,CACF,CAAC;AACDV,SAAS,CAACoB,WAAW,GAAG,WAAW;AACnC,MAAMX,iBAAiB,GAAGZ,UAAU,CAClC,SAASwB,kBAAkBA,CAAChB,KAAK,EAAEF,GAAG,EAAE;EACtC,MAAMS,KAAK,GAAGjB,qBAAqB,CAAC,CAAC;EACrC,MAAMS,MAAM,GAAGR,oBAAoB,CAAC,CAAC;EACrC,IAAI,CAACgB,KAAK,EAAEO,UAAU,EACpB,OAAO,IAAI;EACb,MAAMb,SAAS,GAAGZ,EAAE,CAAC,iCAAiC,EAAEW,KAAK,CAACC,SAAS,CAAC;EACxE,OAAO,eAAgBd,GAAG,CACxBO,MAAM,CAACuB,IAAI,EACX;IACE,GAAGV,KAAK,EAAEW,yBAAyB,CAAClB,KAAK,EAAEF,GAAG,CAAC;IAC/Ca,KAAK,EAAEZ,MAAM,CAACI,iBAAiB;IAC/BF;EACF,CACF,CAAC;AACH,CACF,CAAC;AACDG,iBAAiB,CAACW,WAAW,GAAG,mBAAmB;AAEnD,SAASpB,SAAS,EAAES,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}