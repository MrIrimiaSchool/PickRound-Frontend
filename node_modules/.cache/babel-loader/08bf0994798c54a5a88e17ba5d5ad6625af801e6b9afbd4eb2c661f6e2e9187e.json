{"ast":null,"code":"'use client';\n\nimport { useEffect } from 'react';\nimport { useCallbackRef } from './use-callback-ref.mjs';\nfunction useInterval(callback, delay) {\n  const fn = useCallbackRef(callback);\n  useEffect(() => {\n    let intervalId = null;\n    const tick = () => fn();\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay);\n    }\n    return () => {\n      if (intervalId) {\n        window.clearInterval(intervalId);\n      }\n    };\n  }, [delay, fn]);\n}\nexport { useInterval };","map":{"version":3,"names":["useEffect","useCallbackRef","useInterval","callback","delay","fn","intervalId","tick","window","setInterval","clearInterval"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/node_modules/@chakra-ui/hooks/dist/esm/use-interval.mjs"],"sourcesContent":["'use client';\r\nimport { useEffect } from 'react';\r\nimport { useCallbackRef } from './use-callback-ref.mjs';\r\n\r\nfunction useInterval(callback, delay) {\r\n  const fn = useCallbackRef(callback);\r\n  useEffect(() => {\r\n    let intervalId = null;\r\n    const tick = () => fn();\r\n    if (delay !== null) {\r\n      intervalId = window.setInterval(tick, delay);\r\n    }\r\n    return () => {\r\n      if (intervalId) {\r\n        window.clearInterval(intervalId);\r\n      }\r\n    };\r\n  }, [delay, fn]);\r\n}\r\n\r\nexport { useInterval };\r\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,wBAAwB;AAEvD,SAASC,WAAWA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACpC,MAAMC,EAAE,GAAGJ,cAAc,CAACE,QAAQ,CAAC;EACnCH,SAAS,CAAC,MAAM;IACd,IAAIM,UAAU,GAAG,IAAI;IACrB,MAAMC,IAAI,GAAGA,CAAA,KAAMF,EAAE,CAAC,CAAC;IACvB,IAAID,KAAK,KAAK,IAAI,EAAE;MAClBE,UAAU,GAAGE,MAAM,CAACC,WAAW,CAACF,IAAI,EAAEH,KAAK,CAAC;IAC9C;IACA,OAAO,MAAM;MACX,IAAIE,UAAU,EAAE;QACdE,MAAM,CAACE,aAAa,CAACJ,UAAU,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACF,KAAK,EAAEC,EAAE,CAAC,CAAC;AACjB;AAEA,SAASH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}