{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\PickRound\\\\pickround-frontend\\\\src\\\\RandomPickerPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Box, Heading, VStack, Text, Card, CardBody, Button, useColorModeValue, Flex, Divider, Spinner, Alert, AlertIcon, Select // Importă componenta Select din Chakra UI\n} from \"@chakra-ui/react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport RouletteWheel from \"./RouletteWheel\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomPickerPage() {\n  _s2();\n  var _location$state,\n    _s = $RefreshSig$();\n  const location = useLocation();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.projectName) || \"\");\n  const [teams, setTeams] = useState([]);\n  const [randomTeam, setRandomTeam] = useState(\"\");\n  const [nextPresenter, setNextPresenter] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\n\n  // Funcție pentru a obține proiectele\n  const fetchProjects = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_URL}/projects`);\n      setProjects(response.data.projects);\n      // Dacă nu este selectat niciun proiect, selectează primul proiect disponibil\n      if (!selectedProject && response.data.projects.length > 0) {\n        setSelectedProject(response.data.projects[0].name);\n      }\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to fetch projects.\");\n      setLoading(false);\n    }\n  };\n\n  // Funcție pentru a obține echipele active și cele selectate\n  const fetchTeams = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_URL}/teams`);\n      const {\n        activeTeams,\n        selectedTeams\n      } = response.data;\n      setTeams(activeTeams.map(team => team.name));\n      setHistory(selectedTeams.map(entry => ({\n        name: entry.teams.name,\n        // Asigură-te că backend-ul returnează `teams.name`\n        date: entry.selected_at // Asigură-te că backend-ul returnează `selected_at`\n      })));\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to fetch teams.\");\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  useEffect(() => {\n    if (selectedProject) {\n      fetchTeams();\n    }\n  }, [selectedProject]);\n  const cardBg = useColorModeValue(\"gray.100\", \"gray.700\");\n  const hoverBg = useColorModeValue(\"teal.50\", \"teal.800\");\n  const availableTeamsBg = useColorModeValue(\"blue.50\", \"blue.900\");\n  const historyBg = useColorModeValue(\"orange.50\", \"orange.900\");\n  const formatDate = date => {\n    const d = new Date(date);\n    return d.toLocaleDateString(undefined, {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    });\n  };\n  const handleTeamSelect = async team => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(`${API_URL}/random`, {\n        projectName: selectedProject\n      });\n      const {\n        selectedTeam,\n        remainingTeams\n      } = response.data;\n      setRandomTeam(selectedTeam.name);\n      setTeams(remainingTeams.map(t => t.name));\n      setHistory(prev => [...prev, {\n        name: selectedTeam.name,\n        date: new Date().toLocaleString()\n      }]);\n      if (remainingTeams.length === 1) {\n        const nextTeam = remainingTeams[0].name;\n        const nextDate = new Date();\n        nextDate.setDate(nextDate.getDate() + 7);\n        setNextPresenter(`Next time presenter: ${nextTeam} on ${formatDate(nextDate)}`);\n      } else {\n        setNextPresenter(\"\");\n      }\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to select a random team.\");\n      setLoading(false);\n    }\n  };\n  const handleReset = async () => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      await axios.post(`${API_URL}/reset`, {\n        projectName: selectedProject\n      });\n      await fetchTeams();\n      setRandomTeam(\"\");\n      setNextPresenter(\"\");\n      setHistory([]);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to reset cycle.\");\n      setLoading(false);\n    }\n  };\n\n  // Funcție pentru a gestiona schimbarea proiectului selectat\n  const handleProjectChange = e => {\n    setSelectedProject(e.target.value);\n    setRandomTeam(\"\");\n    setNextPresenter(\"\");\n    setHistory([]);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      height: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: useColorModeValue(\"gray.50\", \"gray.800\"),\n    p: 10,\n    minHeight: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"center\",\n      mb: 8,\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"2xl\",\n        color: useColorModeValue(\"teal.600\", \"teal.300\"),\n        textShadow: \"2px 2px #D0E8F2\",\n        fontWeight: \"extrabold\",\n        children: [\"\\uD83C\\uDFAF \", selectedProject || \"Select a Project\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"error\",\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 8,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a project\",\n        value: selectedProject,\n        onChange: handleProjectChange,\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: project.name,\n          children: project.name\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 2fr 1fr\",\n      gap: 8,\n      alignItems: \"start\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        border: \"2px\",\n        borderColor: \"blue.500\",\n        borderRadius: \"lg\",\n        p: 6,\n        bg: availableTeamsBg,\n        boxShadow: \"lg\",\n        transition: \"transform 0.3s ease\",\n        _hover: {\n          transform: \"scale(1.02)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          mb: 4,\n          color: \"blue.700\",\n          textAlign: \"center\",\n          children: \"Available Teams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          mb: 4,\n          borderColor: \"blue.300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: teams.map((team, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: -20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            exit: {\n              opacity: 0,\n              y: 20\n            },\n            transition: {\n              duration: 0.5,\n              ease: \"easeInOut\",\n              delay: index * 0.1\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              bg: cardBg,\n              p: 4,\n              mb: 3,\n              borderRadius: \"lg\",\n              cursor: \"pointer\",\n              transition: \"transform 0.2s ease\",\n              _hover: {\n                transform: \"scale(1.05)\",\n                bg: hoverBg\n              },\n              boxShadow: \"md\",\n              onClick: () => handleTeamSelect(team),\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: \"bold\",\n                  children: team\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)\n          }, team, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 8,\n        bg: useColorModeValue(\"white\", \"gray.700\"),\n        p: 8,\n        borderRadius: \"lg\",\n        boxShadow: \"lg\",\n        children: [teams.length > 1 ? /*#__PURE__*/_jsxDEV(RouletteWheel, {\n          teams: teams,\n          onSelect: handleTeamSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this) : randomTeam && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"2xl\",\n          fontWeight: \"bold\",\n          color: \"green.500\",\n          children: [\"No need for a wheel! Today presenter: \", randomTeam]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), nextPresenter && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          color: \"orange.600\",\n          bg: useColorModeValue(\"orange.100\", \"orange.700\"),\n          p: 2,\n          borderRadius: \"md\",\n          children: nextPresenter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"red\",\n          onClick: handleReset,\n          children: \"Reset Cycle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        border: \"2px\",\n        borderColor: \"orange.500\",\n        borderRadius: \"lg\",\n        p: 6,\n        bg: historyBg,\n        boxShadow: \"lg\",\n        transition: \"transform 0.3s ease\",\n        _hover: {\n          transform: \"scale(1.02)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          mb: 4,\n          color: \"orange.700\",\n          textAlign: \"center\",\n          children: \"Selected Teams History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          mb: 4,\n          borderColor: \"orange.300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: _s(history.map(_s((entry, index) => {\n            _s();\n            return /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                x: -10\n              },\n              animate: {\n                opacity: 1,\n                x: 0\n              },\n              exit: {\n                opacity: 0,\n                x: 10\n              },\n              transition: {\n                duration: 0.3\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                bg: useColorModeValue(\"orange.100\", \"orange.700\"),\n                p: 4,\n                mb: 3,\n                borderRadius: \"lg\",\n                boxShadow: \"md\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: \"bold\",\n                  children: entry.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.600\",\n                  children: formatDate(entry.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, entry.name + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this);\n          }, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n            return [useColorModeValue];\n          })), \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n            return [useColorModeValue];\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s2(RandomPickerPage, \"QXDf06zYtzFhi0RSF58HjeMeRqk=\", false, function () {\n  return [useLocation, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n_c = RandomPickerPage;\nexport default RandomPickerPage;\nvar _c;\n$RefreshReg$(_c, \"RandomPickerPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Box","Heading","VStack","Text","Card","CardBody","Button","useColorModeValue","Flex","Divider","Spinner","Alert","AlertIcon","Select","motion","AnimatePresence","RouletteWheel","axios","jsxDEV","_jsxDEV","RandomPickerPage","_s2","_location$state","_s","$RefreshSig$","location","projects","setProjects","selectedProject","setSelectedProject","state","projectName","teams","setTeams","randomTeam","setRandomTeam","nextPresenter","setNextPresenter","history","setHistory","loading","setLoading","error","setError","API_URL","process","env","REACT_APP_API_URL","fetchProjects","response","get","data","length","name","err","fetchTeams","activeTeams","selectedTeams","map","team","entry","date","selected_at","cardBg","hoverBg","availableTeamsBg","historyBg","formatDate","d","Date","toLocaleDateString","undefined","weekday","year","month","day","handleTeamSelect","post","selectedTeam","remainingTeams","t","prev","toLocaleString","nextTeam","nextDate","setDate","getDate","handleReset","handleProjectChange","e","target","value","justify","align","height","children","size","fileName","_jsxFileName","lineNumber","columnNumber","bg","p","minHeight","mb","color","textShadow","fontWeight","status","placeholder","onChange","project","id","display","gridTemplateColumns","gap","alignItems","border","borderColor","borderRadius","boxShadow","transition","_hover","transform","textAlign","index","div","initial","opacity","y","animate","exit","duration","ease","delay","cursor","onClick","spacing","onSelect","fontSize","colorScheme","x","_c","$RefreshReg$"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/src/RandomPickerPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  VStack,\r\n  Text,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  useColorModeValue,\r\n  Flex,\r\n  Divider,\r\n  Spinner,\r\n  Alert,\r\n  AlertIcon,\r\n  Select, // Importă componenta Select din Chakra UI\r\n} from \"@chakra-ui/react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport RouletteWheel from \"./RouletteWheel\";\r\nimport axios from \"axios\";\r\n\r\nfunction RandomPickerPage() {\r\n  const location = useLocation();\r\n  const [projects, setProjects] = useState([]);\r\n  const [selectedProject, setSelectedProject] = useState(location.state?.projectName || \"\");\r\n  const [teams, setTeams] = useState([]);\r\n  const [randomTeam, setRandomTeam] = useState(\"\");\r\n  const [nextPresenter, setNextPresenter] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\n  // Funcție pentru a obține proiectele\r\n  const fetchProjects = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`${API_URL}/projects`);\r\n      setProjects(response.data.projects);\r\n      // Dacă nu este selectat niciun proiect, selectează primul proiect disponibil\r\n      if (!selectedProject && response.data.projects.length > 0) {\r\n        setSelectedProject(response.data.projects[0].name);\r\n      }\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch projects.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru a obține echipele active și cele selectate\r\n  const fetchTeams = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`${API_URL}/teams`);\r\n      const { activeTeams, selectedTeams } = response.data;\r\n\r\n      setTeams(activeTeams.map(team => team.name));\r\n      setHistory(selectedTeams.map(entry => ({\r\n        name: entry.teams.name, // Asigură-te că backend-ul returnează `teams.name`\r\n        date: entry.selected_at, // Asigură-te că backend-ul returnează `selected_at`\r\n      })));\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch teams.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedProject) {\r\n      fetchTeams();\r\n    }\r\n  }, [selectedProject]);\r\n\r\n  const cardBg = useColorModeValue(\"gray.100\", \"gray.700\");\r\n  const hoverBg = useColorModeValue(\"teal.50\", \"teal.800\");\r\n  const availableTeamsBg = useColorModeValue(\"blue.50\", \"blue.900\");\r\n  const historyBg = useColorModeValue(\"orange.50\", \"orange.900\");\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    return d.toLocaleDateString(undefined, {\r\n      weekday: \"long\",\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  const handleTeamSelect = async (team) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.post(`${API_URL}/random`, { projectName: selectedProject });\r\n      const { selectedTeam, remainingTeams } = response.data;\r\n      setRandomTeam(selectedTeam.name);\r\n\r\n      setTeams(remainingTeams.map(t => t.name));\r\n\r\n      setHistory(prev => [\r\n        ...prev,\r\n        { name: selectedTeam.name, date: new Date().toLocaleString() },\r\n      ]);\r\n\r\n      if (remainingTeams.length === 1) {\r\n        const nextTeam = remainingTeams[0].name;\r\n        const nextDate = new Date();\r\n        nextDate.setDate(nextDate.getDate() + 7);\r\n        setNextPresenter(`Next time presenter: ${nextTeam} on ${formatDate(nextDate)}`);\r\n      } else {\r\n        setNextPresenter(\"\");\r\n      }\r\n\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Failed to select a random team.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      await axios.post(`${API_URL}/reset`, { projectName: selectedProject });\r\n      await fetchTeams();\r\n      setRandomTeam(\"\");\r\n      setNextPresenter(\"\");\r\n      setHistory([]);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Failed to reset cycle.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Funcție pentru a gestiona schimbarea proiectului selectat\r\n  const handleProjectChange = (e) => {\r\n    setSelectedProject(e.target.value);\r\n    setRandomTeam(\"\");\r\n    setNextPresenter(\"\");\r\n    setHistory([]);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Flex justify=\"center\" align=\"center\" height=\"100vh\">\r\n        <Spinner size=\"xl\" />\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box bg={useColorModeValue(\"gray.50\", \"gray.800\")} p={10} minHeight=\"100vh\">\r\n      <Flex justify=\"center\" mb={8}>\r\n        <Heading\r\n          size=\"2xl\"\r\n          color={useColorModeValue(\"teal.600\", \"teal.300\")}\r\n          textShadow=\"2px 2px #D0E8F2\"\r\n          fontWeight=\"extrabold\"\r\n        >\r\n          🎯 {selectedProject || \"Select a Project\"}\r\n        </Heading>\r\n      </Flex>\r\n\r\n      {error && (\r\n        <Alert status=\"error\" mb={4}>\r\n          <AlertIcon />\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Select pentru proiecte */}\r\n      <Box mb={8}>\r\n        <Select\r\n          placeholder=\"Select a project\"\r\n          value={selectedProject}\r\n          onChange={handleProjectChange}\r\n        >\r\n          {projects.map(project => (\r\n            <option key={project.id} value={project.name}>\r\n              {project.name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </Box>\r\n\r\n      <Box\r\n        display=\"grid\"\r\n        gridTemplateColumns=\"1fr 2fr 1fr\"\r\n        gap={8}\r\n        alignItems=\"start\"\r\n      >\r\n        {/* Secțiunea pentru echipe disponibile */}\r\n        <Box\r\n          border=\"2px\"\r\n          borderColor=\"blue.500\"\r\n          borderRadius=\"lg\"\r\n          p={6}\r\n          bg={availableTeamsBg}\r\n          boxShadow=\"lg\"\r\n          transition=\"transform 0.3s ease\"\r\n          _hover={{ transform: \"scale(1.02)\" }}\r\n        >\r\n          <Heading size=\"lg\" mb={4} color=\"blue.700\" textAlign=\"center\">\r\n            Available Teams\r\n          </Heading>\r\n          <Divider mb={4} borderColor=\"blue.300\" />\r\n          <AnimatePresence>\r\n            {teams.map((team, index) => (\r\n              <motion.div\r\n                key={team}\r\n                initial={{ opacity: 0, y: -20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: 20 }}\r\n                transition={{\r\n                  duration: 0.5,\r\n                  ease: \"easeInOut\",\r\n                  delay: index * 0.1,\r\n                }}\r\n              >\r\n                <Card\r\n                  bg={cardBg}\r\n                  p={4}\r\n                  mb={3}\r\n                  borderRadius=\"lg\"\r\n                  cursor=\"pointer\"\r\n                  transition=\"transform 0.2s ease\"\r\n                  _hover={{\r\n                    transform: \"scale(1.05)\",\r\n                    bg: hoverBg,\r\n                  }}\r\n                  boxShadow=\"md\"\r\n                  onClick={() => handleTeamSelect(team)}\r\n                >\r\n                  <CardBody textAlign=\"center\">\r\n                    <Text fontWeight=\"bold\">{team}</Text>\r\n                  </CardBody>\r\n                </Card>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n        </Box>\r\n\r\n        {/* Secțiunea principală cu roata */}\r\n        <VStack spacing={8} bg={useColorModeValue(\"white\", \"gray.700\")} p={8} borderRadius=\"lg\" boxShadow=\"lg\">\r\n          {teams.length > 1 ? (\r\n            <RouletteWheel teams={teams} onSelect={handleTeamSelect} />\r\n          ) : (\r\n            randomTeam && (\r\n              <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"green.500\">\r\n                No need for a wheel! Today presenter: {randomTeam}\r\n              </Text>\r\n            )\r\n          )}\r\n          {nextPresenter && (\r\n            <Text\r\n              fontSize=\"lg\"\r\n              fontWeight=\"bold\"\r\n              color=\"orange.600\"\r\n              bg={useColorModeValue(\"orange.100\", \"orange.700\")}\r\n              p={2}\r\n              borderRadius=\"md\"\r\n            >\r\n              {nextPresenter}\r\n            </Text>\r\n          )}\r\n          <Button colorScheme=\"red\" onClick={handleReset}>\r\n            Reset Cycle\r\n          </Button>\r\n        </VStack>\r\n\r\n        {/* Secțiunea pentru istoricul echipelor selectate */}\r\n        <Box\r\n          border=\"2px\"\r\n          borderColor=\"orange.500\"\r\n          borderRadius=\"lg\"\r\n          p={6}\r\n          bg={historyBg}\r\n          boxShadow=\"lg\"\r\n          transition=\"transform 0.3s ease\"\r\n          _hover={{ transform: \"scale(1.02)\" }}\r\n        >\r\n          <Heading size=\"lg\" mb={4} color=\"orange.700\" textAlign=\"center\">\r\n            Selected Teams History\r\n          </Heading>\r\n          <Divider mb={4} borderColor=\"orange.300\" />\r\n          <AnimatePresence>\r\n            {history.map((entry, index) => (\r\n              <motion.div\r\n                key={entry.name + index}\r\n                initial={{ opacity: 0, x: -10 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                exit={{ opacity: 0, x: 10 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <Box\r\n                  bg={useColorModeValue(\"orange.100\", \"orange.700\")}\r\n                  p={4}\r\n                  mb={3}\r\n                  borderRadius=\"lg\"\r\n                  boxShadow=\"md\"\r\n                >\r\n                  <Text fontWeight=\"bold\">{entry.name}</Text>\r\n                  <Text fontSize=\"sm\" color=\"gray.600\">\r\n                    {formatDate(entry.date)}\r\n                  </Text>\r\n                </Box>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RandomPickerPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}