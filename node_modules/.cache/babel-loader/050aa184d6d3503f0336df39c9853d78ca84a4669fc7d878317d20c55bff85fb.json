{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\PickRound\\\\pickround-frontend\\\\src\\\\RandomPickerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Heading, Select, Text, Button, VStack, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomPickerPage() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\n  const [history, setHistory] = useState([]);\n  const fetchTeams = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/teams\");\n      const data = await response.json();\n      setTeams(data.activeTeams || []);\n      setHistory(data.selectedTeams || []);\n    } catch (error) {\n      console.error(\"Failed to fetch teams:\", error);\n    }\n  };\n  const handleTeamSelect = e => {\n    setSelectedTeam(e.target.value); // Valoarea selectatÄƒ\n  };\n  useEffect(() => {\n    fetchTeams();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 8,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 4,\n      color: useColorModeValue(\"teal.600\", \"teal.300\"),\n      children: \"\\uD83C\\uDFAF Random Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        children: \"Select a team:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select team\",\n        onChange: handleTeamSelect,\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: team.name,\n          children: team.name\n        }, team.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedTeam && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xl\",\n      fontWeight: \"bold\",\n      color: \"green.500\",\n      mb: 4,\n      children: [\"Selected Team: \", selectedTeam]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      onClick: () => console.log(\"Selected Team:\", selectedTeam),\n      children: \"Confirm Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(RandomPickerPage, \"MjHXhHchT/rxxsil3umMVMCXYJk=\", false, function () {\n  return [useColorModeValue];\n});\n_c = RandomPickerPage;\nexport default RandomPickerPage;\nvar _c;\n$RefreshReg$(_c, \"RandomPickerPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Select","Text","Button","VStack","useColorModeValue","jsxDEV","_jsxDEV","RandomPickerPage","_s","teams","setTeams","selectedTeam","setSelectedTeam","history","setHistory","fetchTeams","response","fetch","data","json","activeTeams","selectedTeams","error","console","handleTeamSelect","e","target","value","p","children","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","spacing","align","fontSize","placeholder","onChange","map","team","name","id","fontWeight","colorScheme","onClick","log","_c","$RefreshReg$"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/src/RandomPickerPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Select,\r\n  Text,\r\n  Button,\r\n  VStack,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction RandomPickerPage() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const fetchTeams = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/teams\");\r\n      const data = await response.json();\r\n      setTeams(data.activeTeams || []);\r\n      setHistory(data.selectedTeams || []);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch teams:\", error);\r\n    }\r\n  };\r\n\r\n  const handleTeamSelect = (e) => {\r\n    setSelectedTeam(e.target.value); // Valoarea selectatÄƒ\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  return (\r\n    <Box p={8}>\r\n      <Heading mb={4} color={useColorModeValue(\"teal.600\", \"teal.300\")}>\r\n        ðŸŽ¯ Random Picker\r\n      </Heading>\r\n\r\n      {/* Dropdown pentru echipe */}\r\n      <VStack spacing={4} align=\"stretch\" mb={6}>\r\n        <Text fontSize=\"lg\">Select a team:</Text>\r\n        <Select placeholder=\"Select team\" onChange={handleTeamSelect}>\r\n          {teams.map((team) => (\r\n            <option key={team.id} value={team.name}>\r\n              {team.name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </VStack>\r\n\r\n      {/* Echipa selectatÄƒ */}\r\n      {selectedTeam && (\r\n        <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"green.500\" mb={4}>\r\n          Selected Team: {selectedTeam}\r\n        </Text>\r\n      )}\r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        onClick={() => console.log(\"Selected Team:\", selectedTeam)}\r\n      >\r\n        Confirm Selection\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RandomPickerPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}