{"ast":null,"code":"import { avatarAnatomy } from '@chakra-ui/anatomy';\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from '@chakra-ui/styled-system';\nimport { randomColor, isDark } from '@chakra-ui/theme-tools';\nimport sizes$1 from '../foundations/sizes.mjs';\nimport { runIfFn } from '../utils/run-if-fn.mjs';\nconst {\n  definePartsStyle,\n  defineMultiStyleConfig\n} = createMultiStyleConfigHelpers(avatarAnatomy.keys);\nconst $border = cssVar(\"avatar-border-color\");\nconst $bg = cssVar(\"avatar-bg\");\nconst $fs = cssVar(\"avatar-font-size\");\nconst $size = cssVar(\"avatar-size\");\nconst baseStyleBadge = defineStyle({\n  borderRadius: \"full\",\n  border: \"0.2em solid\",\n  borderColor: $border.reference,\n  [$border.variable]: \"white\",\n  _dark: {\n    [$border.variable]: \"colors.gray.800\"\n  }\n});\nconst baseStyleExcessLabel = defineStyle({\n  bg: $bg.reference,\n  fontSize: $fs.reference,\n  width: $size.reference,\n  height: $size.reference,\n  lineHeight: \"1\",\n  [$bg.variable]: \"colors.gray.200\",\n  _dark: {\n    [$bg.variable]: \"colors.whiteAlpha.400\"\n  }\n});\nconst baseStyleContainer = defineStyle(props => {\n  const {\n    name,\n    theme\n  } = props;\n  const bg = name ? randomColor({\n    string: name\n  }) : \"colors.gray.400\";\n  const isBgDark = isDark(bg)(theme);\n  let color = \"white\";\n  if (!isBgDark) color = \"gray.800\";\n  return {\n    bg: $bg.reference,\n    fontSize: $fs.reference,\n    color,\n    borderColor: $border.reference,\n    verticalAlign: \"top\",\n    width: $size.reference,\n    height: $size.reference,\n    \"&:not([data-loaded])\": {\n      [$bg.variable]: bg\n    },\n    [$border.variable]: \"colors.white\",\n    _dark: {\n      [$border.variable]: \"colors.gray.800\"\n    }\n  };\n});\nconst baseStyleLabel = defineStyle({\n  fontSize: $fs.reference,\n  lineHeight: \"1\"\n});\nconst baseStyle = definePartsStyle(props => ({\n  badge: runIfFn(baseStyleBadge, props),\n  excessLabel: runIfFn(baseStyleExcessLabel, props),\n  container: runIfFn(baseStyleContainer, props),\n  label: baseStyleLabel\n}));\nfunction getSize(size) {\n  const themeSize = size !== \"100%\" ? sizes$1[size] : void 0;\n  return definePartsStyle({\n    container: {\n      [$size.variable]: themeSize ?? size,\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`\n    },\n    excessLabel: {\n      [$size.variable]: themeSize ?? size,\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`\n    }\n  });\n}\nconst sizes = {\n  \"2xs\": getSize(4),\n  xs: getSize(6),\n  sm: getSize(8),\n  md: getSize(12),\n  lg: getSize(16),\n  xl: getSize(24),\n  \"2xl\": getSize(32),\n  full: getSize(\"100%\")\n};\nconst avatarTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  defaultProps: {\n    size: \"md\"\n  }\n});\nexport { avatarTheme };","map":{"version":3,"names":["avatarAnatomy","createMultiStyleConfigHelpers","cssVar","defineStyle","randomColor","isDark","sizes$1","runIfFn","definePartsStyle","defineMultiStyleConfig","keys","$border","$bg","$fs","$size","baseStyleBadge","borderRadius","border","borderColor","reference","variable","_dark","baseStyleExcessLabel","bg","fontSize","width","height","lineHeight","baseStyleContainer","props","name","theme","string","isBgDark","color","verticalAlign","baseStyleLabel","baseStyle","badge","excessLabel","container","label","getSize","size","themeSize","sizes","xs","sm","md","lg","xl","full","avatarTheme","defaultProps"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/node_modules/@chakra-ui/theme/dist/esm/components/avatar.mjs"],"sourcesContent":["import { avatarAnatomy } from '@chakra-ui/anatomy';\r\nimport { createMultiStyleConfigHelpers, cssVar, defineStyle } from '@chakra-ui/styled-system';\r\nimport { randomColor, isDark } from '@chakra-ui/theme-tools';\r\nimport sizes$1 from '../foundations/sizes.mjs';\r\nimport { runIfFn } from '../utils/run-if-fn.mjs';\r\n\r\nconst { definePartsStyle, defineMultiStyleConfig } = createMultiStyleConfigHelpers(avatarAnatomy.keys);\r\nconst $border = cssVar(\"avatar-border-color\");\r\nconst $bg = cssVar(\"avatar-bg\");\r\nconst $fs = cssVar(\"avatar-font-size\");\r\nconst $size = cssVar(\"avatar-size\");\r\nconst baseStyleBadge = defineStyle({\r\n  borderRadius: \"full\",\r\n  border: \"0.2em solid\",\r\n  borderColor: $border.reference,\r\n  [$border.variable]: \"white\",\r\n  _dark: {\r\n    [$border.variable]: \"colors.gray.800\"\r\n  }\r\n});\r\nconst baseStyleExcessLabel = defineStyle({\r\n  bg: $bg.reference,\r\n  fontSize: $fs.reference,\r\n  width: $size.reference,\r\n  height: $size.reference,\r\n  lineHeight: \"1\",\r\n  [$bg.variable]: \"colors.gray.200\",\r\n  _dark: {\r\n    [$bg.variable]: \"colors.whiteAlpha.400\"\r\n  }\r\n});\r\nconst baseStyleContainer = defineStyle((props) => {\r\n  const { name, theme } = props;\r\n  const bg = name ? randomColor({ string: name }) : \"colors.gray.400\";\r\n  const isBgDark = isDark(bg)(theme);\r\n  let color = \"white\";\r\n  if (!isBgDark)\r\n    color = \"gray.800\";\r\n  return {\r\n    bg: $bg.reference,\r\n    fontSize: $fs.reference,\r\n    color,\r\n    borderColor: $border.reference,\r\n    verticalAlign: \"top\",\r\n    width: $size.reference,\r\n    height: $size.reference,\r\n    \"&:not([data-loaded])\": {\r\n      [$bg.variable]: bg\r\n    },\r\n    [$border.variable]: \"colors.white\",\r\n    _dark: {\r\n      [$border.variable]: \"colors.gray.800\"\r\n    }\r\n  };\r\n});\r\nconst baseStyleLabel = defineStyle({\r\n  fontSize: $fs.reference,\r\n  lineHeight: \"1\"\r\n});\r\nconst baseStyle = definePartsStyle((props) => ({\r\n  badge: runIfFn(baseStyleBadge, props),\r\n  excessLabel: runIfFn(baseStyleExcessLabel, props),\r\n  container: runIfFn(baseStyleContainer, props),\r\n  label: baseStyleLabel\r\n}));\r\nfunction getSize(size) {\r\n  const themeSize = size !== \"100%\" ? sizes$1[size] : void 0;\r\n  return definePartsStyle({\r\n    container: {\r\n      [$size.variable]: themeSize ?? size,\r\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`\r\n    },\r\n    excessLabel: {\r\n      [$size.variable]: themeSize ?? size,\r\n      [$fs.variable]: `calc(${themeSize ?? size} / 2.5)`\r\n    }\r\n  });\r\n}\r\nconst sizes = {\r\n  \"2xs\": getSize(4),\r\n  xs: getSize(6),\r\n  sm: getSize(8),\r\n  md: getSize(12),\r\n  lg: getSize(16),\r\n  xl: getSize(24),\r\n  \"2xl\": getSize(32),\r\n  full: getSize(\"100%\")\r\n};\r\nconst avatarTheme = defineMultiStyleConfig({\r\n  baseStyle,\r\n  sizes,\r\n  defaultProps: {\r\n    size: \"md\"\r\n  }\r\n});\r\n\r\nexport { avatarTheme };\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,6BAA6B,EAAEC,MAAM,EAAEC,WAAW,QAAQ,0BAA0B;AAC7F,SAASC,WAAW,EAAEC,MAAM,QAAQ,wBAAwB;AAC5D,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAEhD,MAAM;EAAEC,gBAAgB;EAAEC;AAAuB,CAAC,GAAGR,6BAA6B,CAACD,aAAa,CAACU,IAAI,CAAC;AACtG,MAAMC,OAAO,GAAGT,MAAM,CAAC,qBAAqB,CAAC;AAC7C,MAAMU,GAAG,GAAGV,MAAM,CAAC,WAAW,CAAC;AAC/B,MAAMW,GAAG,GAAGX,MAAM,CAAC,kBAAkB,CAAC;AACtC,MAAMY,KAAK,GAAGZ,MAAM,CAAC,aAAa,CAAC;AACnC,MAAMa,cAAc,GAAGZ,WAAW,CAAC;EACjCa,YAAY,EAAE,MAAM;EACpBC,MAAM,EAAE,aAAa;EACrBC,WAAW,EAAEP,OAAO,CAACQ,SAAS;EAC9B,CAACR,OAAO,CAACS,QAAQ,GAAG,OAAO;EAC3BC,KAAK,EAAE;IACL,CAACV,OAAO,CAACS,QAAQ,GAAG;EACtB;AACF,CAAC,CAAC;AACF,MAAME,oBAAoB,GAAGnB,WAAW,CAAC;EACvCoB,EAAE,EAAEX,GAAG,CAACO,SAAS;EACjBK,QAAQ,EAAEX,GAAG,CAACM,SAAS;EACvBM,KAAK,EAAEX,KAAK,CAACK,SAAS;EACtBO,MAAM,EAAEZ,KAAK,CAACK,SAAS;EACvBQ,UAAU,EAAE,GAAG;EACf,CAACf,GAAG,CAACQ,QAAQ,GAAG,iBAAiB;EACjCC,KAAK,EAAE;IACL,CAACT,GAAG,CAACQ,QAAQ,GAAG;EAClB;AACF,CAAC,CAAC;AACF,MAAMQ,kBAAkB,GAAGzB,WAAW,CAAE0B,KAAK,IAAK;EAChD,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGF,KAAK;EAC7B,MAAMN,EAAE,GAAGO,IAAI,GAAG1B,WAAW,CAAC;IAAE4B,MAAM,EAAEF;EAAK,CAAC,CAAC,GAAG,iBAAiB;EACnE,MAAMG,QAAQ,GAAG5B,MAAM,CAACkB,EAAE,CAAC,CAACQ,KAAK,CAAC;EAClC,IAAIG,KAAK,GAAG,OAAO;EACnB,IAAI,CAACD,QAAQ,EACXC,KAAK,GAAG,UAAU;EACpB,OAAO;IACLX,EAAE,EAAEX,GAAG,CAACO,SAAS;IACjBK,QAAQ,EAAEX,GAAG,CAACM,SAAS;IACvBe,KAAK;IACLhB,WAAW,EAAEP,OAAO,CAACQ,SAAS;IAC9BgB,aAAa,EAAE,KAAK;IACpBV,KAAK,EAAEX,KAAK,CAACK,SAAS;IACtBO,MAAM,EAAEZ,KAAK,CAACK,SAAS;IACvB,sBAAsB,EAAE;MACtB,CAACP,GAAG,CAACQ,QAAQ,GAAGG;IAClB,CAAC;IACD,CAACZ,OAAO,CAACS,QAAQ,GAAG,cAAc;IAClCC,KAAK,EAAE;MACL,CAACV,OAAO,CAACS,QAAQ,GAAG;IACtB;EACF,CAAC;AACH,CAAC,CAAC;AACF,MAAMgB,cAAc,GAAGjC,WAAW,CAAC;EACjCqB,QAAQ,EAAEX,GAAG,CAACM,SAAS;EACvBQ,UAAU,EAAE;AACd,CAAC,CAAC;AACF,MAAMU,SAAS,GAAG7B,gBAAgB,CAAEqB,KAAK,KAAM;EAC7CS,KAAK,EAAE/B,OAAO,CAACQ,cAAc,EAAEc,KAAK,CAAC;EACrCU,WAAW,EAAEhC,OAAO,CAACe,oBAAoB,EAAEO,KAAK,CAAC;EACjDW,SAAS,EAAEjC,OAAO,CAACqB,kBAAkB,EAAEC,KAAK,CAAC;EAC7CY,KAAK,EAAEL;AACT,CAAC,CAAC,CAAC;AACH,SAASM,OAAOA,CAACC,IAAI,EAAE;EACrB,MAAMC,SAAS,GAAGD,IAAI,KAAK,MAAM,GAAGrC,OAAO,CAACqC,IAAI,CAAC,GAAG,KAAK,CAAC;EAC1D,OAAOnC,gBAAgB,CAAC;IACtBgC,SAAS,EAAE;MACT,CAAC1B,KAAK,CAACM,QAAQ,GAAGwB,SAAS,IAAID,IAAI;MACnC,CAAC9B,GAAG,CAACO,QAAQ,GAAG,QAAQwB,SAAS,IAAID,IAAI;IAC3C,CAAC;IACDJ,WAAW,EAAE;MACX,CAACzB,KAAK,CAACM,QAAQ,GAAGwB,SAAS,IAAID,IAAI;MACnC,CAAC9B,GAAG,CAACO,QAAQ,GAAG,QAAQwB,SAAS,IAAID,IAAI;IAC3C;EACF,CAAC,CAAC;AACJ;AACA,MAAME,KAAK,GAAG;EACZ,KAAK,EAAEH,OAAO,CAAC,CAAC,CAAC;EACjBI,EAAE,EAAEJ,OAAO,CAAC,CAAC,CAAC;EACdK,EAAE,EAAEL,OAAO,CAAC,CAAC,CAAC;EACdM,EAAE,EAAEN,OAAO,CAAC,EAAE,CAAC;EACfO,EAAE,EAAEP,OAAO,CAAC,EAAE,CAAC;EACfQ,EAAE,EAAER,OAAO,CAAC,EAAE,CAAC;EACf,KAAK,EAAEA,OAAO,CAAC,EAAE,CAAC;EAClBS,IAAI,EAAET,OAAO,CAAC,MAAM;AACtB,CAAC;AACD,MAAMU,WAAW,GAAG3C,sBAAsB,CAAC;EACzC4B,SAAS;EACTQ,KAAK;EACLQ,YAAY,EAAE;IACZV,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,SAASS,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}