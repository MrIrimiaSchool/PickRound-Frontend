{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\PickRound\\\\pickround-frontend\\\\src\\\\Components\\\\RouletteWheel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Wheel } from \"react-custom-roulette\";\nimport { VStack, Button, Text } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouletteWheel = ({\n  teams = [],\n  onSelect = () => {}\n}) => {\n  _s();\n  const [mustSpin, setMustSpin] = useState(false);\n  const [prizeNumber, setPrizeNumber] = useState(0);\n\n  // Verificăm dacă teams este valid\n  const data = Array.isArray(teams) ? teams.map(team => ({\n    option: team\n  })) : [];\n  const handleSpin = () => {\n    if (data.length === 0) return; // Prevenim eroarea dacă nu există echipe\n    const randomIndex = Math.floor(Math.random() * data.length);\n    setPrizeNumber(randomIndex);\n    setMustSpin(true);\n  };\n  const handleStop = () => {\n    setMustSpin(false);\n    if (data.length > 0) {\n      onSelect(teams[prizeNumber]); // Notificăm echipa selectată\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 6,\n    children: [data.length > 0 ? /*#__PURE__*/_jsxDEV(Wheel, {\n      mustStartSpinning: mustSpin,\n      prizeNumber: prizeNumber,\n      data: data,\n      backgroundColors: [\"#6875F5\", \"#202124\"],\n      textColors: [\"#ffffff\"],\n      onStopSpinning: handleStop,\n      outerBorderColor: \"#000000\",\n      outerBorderWidth: 5,\n      radiusLineColor: \"#000000\",\n      radiusLineWidth: 2,\n      fontSize: 18,\n      spinDuration: 0.4,\n      disableInitialAnimation: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Text, {\n      color: \"red.500\",\n      fontSize: \"xl\",\n      children: \"No teams available to spin.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      onClick: handleSpin,\n      isDisabled: data.length === 0,\n      children: \"Spin the Wheel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(RouletteWheel, \"58vZrOuB/e+QvyhPdLKQFzmUZcU=\");\n_c = RouletteWheel;\nexport default RouletteWheel;\nvar _c;\n$RefreshReg$(_c, \"RouletteWheel\");","map":{"version":3,"names":["React","useState","Wheel","VStack","Button","Text","jsxDEV","_jsxDEV","RouletteWheel","teams","onSelect","_s","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","data","Array","isArray","map","team","option","handleSpin","length","randomIndex","Math","floor","random","handleStop","spacing","children","mustStartSpinning","backgroundColors","textColors","onStopSpinning","outerBorderColor","outerBorderWidth","radiusLineColor","radiusLineWidth","fontSize","spinDuration","disableInitialAnimation","fileName","_jsxFileName","lineNumber","columnNumber","color","colorScheme","onClick","isDisabled","_c","$RefreshReg$"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/src/Components/RouletteWheel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\nimport { VStack, Button, Text } from \"@chakra-ui/react\";\r\n\r\nconst RouletteWheel = ({ teams = [], onSelect = () => {} }) => {\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [prizeNumber, setPrizeNumber] = useState(0);\r\n\r\n  // Verificăm dacă teams este valid\r\n  const data = Array.isArray(teams)\r\n    ? teams.map((team) => ({ option: team }))\r\n    : [];\r\n\r\n  const handleSpin = () => {\r\n    if (data.length === 0) return; // Prevenim eroarea dacă nu există echipe\r\n    const randomIndex = Math.floor(Math.random() * data.length);\r\n    setPrizeNumber(randomIndex);\r\n    setMustSpin(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setMustSpin(false);\r\n    if (data.length > 0) {\r\n      onSelect(teams[prizeNumber]); // Notificăm echipa selectată\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      {data.length > 0 ? (\r\n        <Wheel\r\n          mustStartSpinning={mustSpin}\r\n          prizeNumber={prizeNumber}\r\n          data={data}\r\n          backgroundColors={[\"#6875F5\", \"#202124\"]}\r\n          textColors={[\"#ffffff\"]}\r\n          onStopSpinning={handleStop}\r\n          outerBorderColor=\"#000000\"\r\n          outerBorderWidth={5}\r\n          radiusLineColor=\"#000000\"\r\n          radiusLineWidth={2}\r\n          fontSize={18}\r\n          spinDuration={0.4}\r\n          disableInitialAnimation={true}\r\n        />\r\n      ) : (\r\n        <Text color=\"red.500\" fontSize=\"xl\">\r\n          No teams available to spin.\r\n        </Text>\r\n      )}\r\n      <Button colorScheme=\"teal\" onClick={handleSpin} isDisabled={data.length === 0}>\r\n        Spin the Wheel\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default RouletteWheel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,MAAM,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,KAAK,GAAG,EAAE;EAAEC,QAAQ,GAAGA,CAAA,KAAM,CAAC;AAAE,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMe,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC,GAC7BA,KAAK,CAACU,GAAG,CAAEC,IAAI,KAAM;IAAEC,MAAM,EAAED;EAAK,CAAC,CAAC,CAAC,GACvC,EAAE;EAEN,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIN,IAAI,CAACO,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;IAC/B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGX,IAAI,CAACO,MAAM,CAAC;IAC3DR,cAAc,CAACS,WAAW,CAAC;IAC3BX,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvBf,WAAW,CAAC,KAAK,CAAC;IAClB,IAAIG,IAAI,CAACO,MAAM,GAAG,CAAC,EAAE;MACnBb,QAAQ,CAACD,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;IAChC;EACF,CAAC;EAED,oBACEP,OAAA,CAACJ,MAAM;IAAC0B,OAAO,EAAE,CAAE;IAAAC,QAAA,GAChBd,IAAI,CAACO,MAAM,GAAG,CAAC,gBACdhB,OAAA,CAACL,KAAK;MACJ6B,iBAAiB,EAAEnB,QAAS;MAC5BE,WAAW,EAAEA,WAAY;MACzBE,IAAI,EAAEA,IAAK;MACXgB,gBAAgB,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;MACzCC,UAAU,EAAE,CAAC,SAAS,CAAE;MACxBC,cAAc,EAAEN,UAAW;MAC3BO,gBAAgB,EAAC,SAAS;MAC1BC,gBAAgB,EAAE,CAAE;MACpBC,eAAe,EAAC,SAAS;MACzBC,eAAe,EAAE,CAAE;MACnBC,QAAQ,EAAE,EAAG;MACbC,YAAY,EAAE,GAAI;MAClBC,uBAAuB,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,gBAEFtC,OAAA,CAACF,IAAI;MAACyC,KAAK,EAAC,SAAS;MAACP,QAAQ,EAAC,IAAI;MAAAT,QAAA,EAAC;IAEpC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACP,eACDtC,OAAA,CAACH,MAAM;MAAC2C,WAAW,EAAC,MAAM;MAACC,OAAO,EAAE1B,UAAW;MAAC2B,UAAU,EAAEjC,IAAI,CAACO,MAAM,KAAK,CAAE;MAAAO,QAAA,EAAC;IAE/E;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAAClC,EAAA,CAnDIH,aAAa;AAAA0C,EAAA,GAAb1C,aAAa;AAqDnB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}