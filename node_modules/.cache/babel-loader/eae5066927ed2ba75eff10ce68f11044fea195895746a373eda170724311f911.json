{"ast":null,"code":"'use client';\n\nimport { isObject } from '@chakra-ui/utils';\nimport { useMediaQuery } from './use-media-query.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nfunction useBreakpoint(arg) {\n  const opts = isObject(arg) ? arg : {\n    fallback: arg ?? \"base\"\n  };\n  const theme = useTheme();\n  const breakpoints = theme.__breakpoints.details.map(({\n    minMaxQuery,\n    breakpoint\n  }) => ({\n    breakpoint,\n    query: minMaxQuery.replace(\"@media screen and \", \"\")\n  }));\n  const fallback = breakpoints.map(bp => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map(bp => bp.query), {\n    fallback,\n    ssr: opts.ssr\n  });\n  const index = values.findIndex(value => value == true);\n  return breakpoints[index]?.breakpoint ?? opts.fallback;\n}\nexport { useBreakpoint };","map":{"version":3,"names":["isObject","useMediaQuery","useTheme","useBreakpoint","arg","opts","fallback","theme","breakpoints","__breakpoints","details","map","minMaxQuery","breakpoint","query","replace","bp","values","ssr","index","findIndex","value"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/node_modules/@chakra-ui/react/dist/esm/media-query/use-breakpoint.mjs"],"sourcesContent":["'use client';\r\nimport { isObject } from '@chakra-ui/utils';\r\nimport { useMediaQuery } from './use-media-query.mjs';\r\nimport { useTheme } from '../system/use-theme.mjs';\r\n\r\nfunction useBreakpoint(arg) {\r\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\r\n  const theme = useTheme();\r\n  const breakpoints = theme.__breakpoints.details.map(\r\n    ({ minMaxQuery, breakpoint }) => ({\r\n      breakpoint,\r\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\r\n    })\r\n  );\r\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\r\n  const values = useMediaQuery(\r\n    breakpoints.map((bp) => bp.query),\r\n    { fallback, ssr: opts.ssr }\r\n  );\r\n  const index = values.findIndex((value) => value == true);\r\n  return breakpoints[index]?.breakpoint ?? opts.fallback;\r\n}\r\n\r\nexport { useBreakpoint };\r\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,MAAMC,IAAI,GAAGL,QAAQ,CAACI,GAAG,CAAC,GAAGA,GAAG,GAAG;IAAEE,QAAQ,EAAEF,GAAG,IAAI;EAAO,CAAC;EAC9D,MAAMG,KAAK,GAAGL,QAAQ,CAAC,CAAC;EACxB,MAAMM,WAAW,GAAGD,KAAK,CAACE,aAAa,CAACC,OAAO,CAACC,GAAG,CACjD,CAAC;IAAEC,WAAW;IAAEC;EAAW,CAAC,MAAM;IAChCA,UAAU;IACVC,KAAK,EAAEF,WAAW,CAACG,OAAO,CAAC,oBAAoB,EAAE,EAAE;EACrD,CAAC,CACH,CAAC;EACD,MAAMT,QAAQ,GAAGE,WAAW,CAACG,GAAG,CAAEK,EAAE,IAAKA,EAAE,CAACH,UAAU,KAAKR,IAAI,CAACC,QAAQ,CAAC;EACzE,MAAMW,MAAM,GAAGhB,aAAa,CAC1BO,WAAW,CAACG,GAAG,CAAEK,EAAE,IAAKA,EAAE,CAACF,KAAK,CAAC,EACjC;IAAER,QAAQ;IAAEY,GAAG,EAAEb,IAAI,CAACa;EAAI,CAC5B,CAAC;EACD,MAAMC,KAAK,GAAGF,MAAM,CAACG,SAAS,CAAEC,KAAK,IAAKA,KAAK,IAAI,IAAI,CAAC;EACxD,OAAOb,WAAW,CAACW,KAAK,CAAC,EAAEN,UAAU,IAAIR,IAAI,CAACC,QAAQ;AACxD;AAEA,SAASH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}