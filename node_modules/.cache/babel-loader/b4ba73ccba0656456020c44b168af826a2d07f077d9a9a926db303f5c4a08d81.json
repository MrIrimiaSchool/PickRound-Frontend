{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\PickRound\\\\pickround-frontend\\\\src\\\\RandomPickerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Heading, Text, Select, Button, VStack, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomPickerPage() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [selectedTeamId, setSelectedTeamId] = useState(null);\n  const [selectedTeamName, setSelectedTeamName] = useState(\"\");\n\n  // Fetch teams from backend\n  useEffect(() => {\n    const fetchTeams = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/teams\");\n        const data = await response.json();\n        setTeams(data.activeTeams || []);\n      } catch (error) {\n        console.error(\"Failed to fetch teams:\", error);\n      }\n    };\n    fetchTeams();\n  }, []);\n  const handleTeamSelect = e => {\n    const selectedId = e.target.value; // ID-ul echipei selectate\n    const selectedTeam = teams.find(team => team.id === parseInt(selectedId)); // GÄƒsim echipa selectatÄƒ\n    setSelectedTeamId(selectedId);\n    setSelectedTeamName(selectedTeam ? selectedTeam.name : \"\");\n  };\n  const handleConfirmSelection = () => {\n    console.log(\"Selected Team:\", {\n      id: selectedTeamId,\n      name: selectedTeamName\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 8,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 4,\n      color: useColorModeValue(\"teal.600\", \"teal.300\"),\n      children: \"\\uD83C\\uDFAF Random Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        children: \"Select a team:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select team\",\n        onChange: handleTeamSelect,\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: team.id,\n          children: team.name\n        }, team.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), selectedTeamId && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xl\",\n      fontWeight: \"bold\",\n      color: \"green.500\",\n      mb: 4,\n      children: [\"Selected Team: \", selectedTeamName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      onClick: handleConfirmSelection,\n      isDisabled: !selectedTeamId,\n      children: \"Confirm Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(RandomPickerPage, \"IN3wyVsF4HWtnJHdpAtuQZEdroo=\", false, function () {\n  return [useColorModeValue];\n});\n_c = RandomPickerPage;\nexport default RandomPickerPage;\nvar _c;\n$RefreshReg$(_c, \"RandomPickerPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Select","Button","VStack","useColorModeValue","jsxDEV","_jsxDEV","RandomPickerPage","_s","teams","setTeams","selectedTeamId","setSelectedTeamId","selectedTeamName","setSelectedTeamName","fetchTeams","response","fetch","data","json","activeTeams","error","console","handleTeamSelect","e","selectedId","target","value","selectedTeam","find","team","id","parseInt","name","handleConfirmSelection","log","p","children","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","spacing","align","fontSize","placeholder","onChange","map","fontWeight","colorScheme","onClick","isDisabled","_c","$RefreshReg$"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/src/RandomPickerPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Select,\r\n  Button,\r\n  VStack,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction RandomPickerPage() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [selectedTeamId, setSelectedTeamId] = useState(null);\r\n  const [selectedTeamName, setSelectedTeamName] = useState(\"\");\r\n\r\n  // Fetch teams from backend\r\n  useEffect(() => {\r\n    const fetchTeams = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/teams\");\r\n        const data = await response.json();\r\n        setTeams(data.activeTeams || []);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch teams:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  const handleTeamSelect = (e) => {\r\n    const selectedId = e.target.value; // ID-ul echipei selectate\r\n    const selectedTeam = teams.find((team) => team.id === parseInt(selectedId)); // GÄƒsim echipa selectatÄƒ\r\n    setSelectedTeamId(selectedId);\r\n    setSelectedTeamName(selectedTeam ? selectedTeam.name : \"\");\r\n  };\r\n\r\n  const handleConfirmSelection = () => {\r\n    console.log(\"Selected Team:\", { id: selectedTeamId, name: selectedTeamName });\r\n  };\r\n\r\n  return (\r\n    <Box p={8}>\r\n      <Heading mb={4} color={useColorModeValue(\"teal.600\", \"teal.300\")}>\r\n        ðŸŽ¯ Random Picker\r\n      </Heading>\r\n\r\n      {/* Dropdown pentru echipe */}\r\n      <VStack spacing={4} align=\"stretch\" mb={6}>\r\n        <Text fontSize=\"lg\">Select a team:</Text>\r\n        <Select placeholder=\"Select team\" onChange={handleTeamSelect}>\r\n          {teams.map((team) => (\r\n            <option key={team.id} value={team.id}>\r\n              {team.name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </VStack>\r\n\r\n      {/* Echipa selectatÄƒ */}\r\n      {selectedTeamId && (\r\n        <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"green.500\" mb={4}>\r\n          Selected Team: {selectedTeamName}\r\n        </Text>\r\n      )}\r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        onClick={handleConfirmSelection}\r\n        isDisabled={!selectedTeamId}\r\n      >\r\n        Confirm Selection\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RandomPickerPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}