{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\PickRound\\\\pickround-frontend\\\\src\\\\RandomPickerPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Heading, Text, Button, VStack, Divider, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomPickerPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [teams, setTeams] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [randomTeam, setRandomTeam] = useState(null);\n  const cardBg = useColorModeValue(\"gray.100\", \"gray.700\");\n\n  // Fetch teams from backend\n  useEffect(() => {\n    const fetchTeams = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/teams\");\n        const data = await response.json();\n        setTeams(data.activeTeams || []); // Echipele disponibile\n        setHistory(data.selectedTeams || []); // Istoricul echipelor selectate\n      } catch (error) {\n        console.error(\"Failed to fetch teams:\", error);\n      }\n    };\n    fetchTeams();\n  }, []);\n  const handleTeamSelect = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/random\", {\n        method: \"POST\"\n      });\n      const data = await response.json();\n      setRandomTeam(data.selectedTeam || null); // Echipa selectată\n      setTeams(data.remainingTeams || []); // Echipele rămase\n      setHistory(data.selectedTeams || []); // Actualizare istoric\n    } catch (error) {\n      console.error(\"Failed to select a team:\", error);\n    }\n  };\n  const handleReset = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/teams\");\n      const data = await response.json();\n      setTeams(data.activeTeams || []); // Resetează echipele disponibile\n      setHistory([]); // Resetează istoricul\n      setRandomTeam(null); // Resetează echipa selectată\n    } catch (error) {\n      console.error(\"Failed to reset teams:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 8,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 4,\n      color: useColorModeValue(\"teal.600\", \"teal.300\"),\n      children: \"\\uD83C\\uDFAF Random Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      mb: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Available Teams:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), teams.length > 0 ? teams.map(team => /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        bg: cardBg,\n        borderRadius: \"md\",\n        boxShadow: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          children: team.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n        children: \"No teams available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), randomTeam && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"xl\",\n      fontWeight: \"bold\",\n      color: \"green.500\",\n      mb: 4,\n      children: [\"Selected Team: \", randomTeam.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      mb: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: handleTeamSelect,\n        isDisabled: teams.length === 0,\n        children: \"Select Random Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"red\",\n        onClick: handleReset,\n        children: \"Reset Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      align: \"stretch\",\n      mt: 8,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Selected Teams History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), history.length > 0 ? _s(history.map(_s((entry, index) => {\n        _s();\n        return /*#__PURE__*/_jsxDEV(Box, {\n          p: 4,\n          bg: useColorModeValue(\"orange.100\", \"orange.700\"),\n          borderRadius: \"md\",\n          boxShadow: \"md\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: entry.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this);\n      }, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n        return [useColorModeValue];\n      })), \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n        return [useColorModeValue];\n      }) : /*#__PURE__*/_jsxDEV(Text, {\n        children: \"No history available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s2(RandomPickerPage, \"vqOEoBCMGhnS90GSjkpVgoHa3XQ=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n_c = RandomPickerPage;\nexport default RandomPickerPage;\nvar _c;\n$RefreshReg$(_c, \"RandomPickerPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","VStack","Divider","useColorModeValue","jsxDEV","_jsxDEV","RandomPickerPage","_s2","_s","$RefreshSig$","teams","setTeams","history","setHistory","randomTeam","setRandomTeam","cardBg","fetchTeams","response","fetch","data","json","activeTeams","selectedTeams","error","console","handleTeamSelect","method","selectedTeam","remainingTeams","handleReset","p","children","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","spacing","align","size","length","map","team","bg","borderRadius","boxShadow","fontWeight","name","id","fontSize","colorScheme","onClick","isDisabled","mt","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/src/RandomPickerPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  VStack,\r\n  Divider,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction RandomPickerPage() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [randomTeam, setRandomTeam] = useState(null);\r\n\r\n  const cardBg = useColorModeValue(\"gray.100\", \"gray.700\");\r\n\r\n  // Fetch teams from backend\r\n  useEffect(() => {\r\n    const fetchTeams = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/teams\");\r\n        const data = await response.json();\r\n        setTeams(data.activeTeams || []); // Echipele disponibile\r\n        setHistory(data.selectedTeams || []); // Istoricul echipelor selectate\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch teams:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  const handleTeamSelect = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/random\", {\r\n        method: \"POST\",\r\n      });\r\n      const data = await response.json();\r\n\r\n      setRandomTeam(data.selectedTeam || null); // Echipa selectată\r\n      setTeams(data.remainingTeams || []); // Echipele rămase\r\n      setHistory(data.selectedTeams || []); // Actualizare istoric\r\n    } catch (error) {\r\n      console.error(\"Failed to select a team:\", error);\r\n    }\r\n  };\r\n\r\n  const handleReset = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/teams\");\r\n      const data = await response.json();\r\n      setTeams(data.activeTeams || []); // Resetează echipele disponibile\r\n      setHistory([]); // Resetează istoricul\r\n      setRandomTeam(null); // Resetează echipa selectată\r\n    } catch (error) {\r\n      console.error(\"Failed to reset teams:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={8}>\r\n      <Heading mb={4} color={useColorModeValue(\"teal.600\", \"teal.300\")}>\r\n        🎯 Random Picker\r\n      </Heading>\r\n\r\n      {/* Afișăm echipele disponibile */}\r\n      <VStack spacing={4} align=\"stretch\" mb={6}>\r\n        <Heading size=\"md\">Available Teams:</Heading>\r\n        {teams.length > 0 ? (\r\n          teams.map((team) => (\r\n            <Box\r\n              key={team.id}\r\n              p={4}\r\n              bg={cardBg}\r\n              borderRadius=\"md\"\r\n              boxShadow=\"md\"\r\n            >\r\n              <Text fontWeight=\"bold\">{team.name}</Text>\r\n            </Box>\r\n          ))\r\n        ) : (\r\n          <Text>No teams available.</Text>\r\n        )}\r\n      </VStack>\r\n\r\n      {/* Echipa selectată */}\r\n      {randomTeam && (\r\n        <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"green.500\" mb={4}>\r\n          Selected Team: {randomTeam.name}\r\n        </Text>\r\n      )}\r\n\r\n      <Divider mb={6} />\r\n\r\n      {/* Butoane */}\r\n      <VStack spacing={4}>\r\n        <Button colorScheme=\"blue\" onClick={handleTeamSelect} isDisabled={teams.length === 0}>\r\n          Select Random Team\r\n        </Button>\r\n        <Button colorScheme=\"red\" onClick={handleReset}>\r\n          Reset Teams\r\n        </Button>\r\n      </VStack>\r\n\r\n      {/* Istoric */}\r\n      <VStack spacing={4} align=\"stretch\" mt={8}>\r\n        <Heading size=\"md\">Selected Teams History:</Heading>\r\n        {history.length > 0 ? (\r\n          history.map((entry, index) => (\r\n            <Box\r\n              key={index}\r\n              p={4}\r\n              bg={useColorModeValue(\"orange.100\", \"orange.700\")}\r\n              borderRadius=\"md\"\r\n              boxShadow=\"md\"\r\n            >\r\n              <Text fontWeight=\"bold\">{entry.name}</Text>\r\n            </Box>\r\n          ))\r\n        ) : (\r\n          <Text>No history available.</Text>\r\n        )}\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RandomPickerPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}