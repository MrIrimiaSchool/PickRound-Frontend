{"ast":null,"code":"'use client';\n\nimport { createRenderToast } from './toast.mjs';\nimport { findToast, getToastPosition } from './toast.utils.mjs';\nconst initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": []\n};\nconst toastStore = createStore(initialState);\nfunction createStore(initialState2) {\n  let state = initialState2;\n  const listeners = /* @__PURE__ */new Set();\n  const setState = setStateFn => {\n    state = setStateFn(state);\n    listeners.forEach(l => l());\n  };\n  return {\n    getState: () => state,\n    subscribe: listener => {\n      listeners.add(listener);\n      return () => {\n        setState(() => initialState2);\n        listeners.delete(listener);\n      };\n    },\n    /**\r\n     * Delete a toast record at its position\r\n     */\n    removeToast: (id, position) => {\n      setState(prevState => ({\n        ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter(toast => toast.id != id)\n      }));\n    },\n    notify: (message, options) => {\n      const toast = createToast(message, options);\n      const {\n        position,\n        id\n      } = toast;\n      setState(prevToasts => {\n        const isTop = position.includes(\"top\");\n        const toasts = isTop ? [toast, ...(prevToasts[position] ?? [])] : [...(prevToasts[position] ?? []), toast];\n        return {\n          ...prevToasts,\n          [position]: toasts\n        };\n      });\n      return id;\n    },\n    update: (id, options) => {\n      if (!id) return;\n      setState(prevState => {\n        const nextState = {\n          ...prevState\n        };\n        const {\n          position,\n          index\n        } = findToast(nextState, id);\n        if (position && index !== -1) {\n          nextState[position][index] = {\n            ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options)\n          };\n        }\n        return nextState;\n      });\n    },\n    closeAll: ({\n      positions\n    } = {}) => {\n      setState(prev => {\n        const allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        const positionsToClose = positions ?? allPositions;\n        return positionsToClose.reduce((acc, position) => {\n          acc[position] = prev[position].map(toast => ({\n            ...toast,\n            requestClose: true\n          }));\n          return acc;\n        }, {\n          ...prev\n        });\n      });\n    },\n    close: id => {\n      setState(prevState => {\n        const position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return {\n          ...prevState,\n          [position]: prevState[position].map(toast => {\n            if (toast.id == id) {\n              return {\n                ...toast,\n                requestClose: true\n              };\n            }\n            return toast;\n          })\n        };\n      });\n    },\n    isActive: id => Boolean(findToast(toastStore.getState(), id).position)\n  };\n}\nlet counter = 0;\nfunction createToast(message, options = {}) {\n  counter += 1;\n  const id = options.id ?? counter;\n  const position = options.position ?? \"bottom\";\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle\n  };\n}\nexport { toastStore };","map":{"version":3,"names":["createRenderToast","findToast","getToastPosition","initialState","top","bottom","toastStore","createStore","initialState2","state","listeners","Set","setState","setStateFn","forEach","l","getState","subscribe","listener","add","delete","removeToast","id","position","prevState","filter","toast","notify","message","options","createToast","prevToasts","isTop","includes","toasts","update","nextState","index","closeAll","positions","prev","allPositions","positionsToClose","reduce","acc","map","requestClose","close","isActive","Boolean","counter","duration","onCloseComplete","onRequestRemove","String","status","containerStyle"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/node_modules/@chakra-ui/react/dist/esm/toast/toast.store.mjs"],"sourcesContent":["'use client';\r\nimport { createRenderToast } from './toast.mjs';\r\nimport { findToast, getToastPosition } from './toast.utils.mjs';\r\n\r\nconst initialState = {\r\n  top: [],\r\n  \"top-left\": [],\r\n  \"top-right\": [],\r\n  \"bottom-left\": [],\r\n  bottom: [],\r\n  \"bottom-right\": []\r\n};\r\nconst toastStore = createStore(initialState);\r\nfunction createStore(initialState2) {\r\n  let state = initialState2;\r\n  const listeners = /* @__PURE__ */ new Set();\r\n  const setState = (setStateFn) => {\r\n    state = setStateFn(state);\r\n    listeners.forEach((l) => l());\r\n  };\r\n  return {\r\n    getState: () => state,\r\n    subscribe: (listener) => {\r\n      listeners.add(listener);\r\n      return () => {\r\n        setState(() => initialState2);\r\n        listeners.delete(listener);\r\n      };\r\n    },\r\n    /**\r\n     * Delete a toast record at its position\r\n     */\r\n    removeToast: (id, position) => {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        // id may be string or number\r\n        // eslint-disable-next-line eqeqeq\r\n        [position]: prevState[position].filter((toast) => toast.id != id)\r\n      }));\r\n    },\r\n    notify: (message, options) => {\r\n      const toast = createToast(message, options);\r\n      const { position, id } = toast;\r\n      setState((prevToasts) => {\r\n        const isTop = position.includes(\"top\");\r\n        const toasts = isTop ? [toast, ...prevToasts[position] ?? []] : [...prevToasts[position] ?? [], toast];\r\n        return {\r\n          ...prevToasts,\r\n          [position]: toasts\r\n        };\r\n      });\r\n      return id;\r\n    },\r\n    update: (id, options) => {\r\n      if (!id)\r\n        return;\r\n      setState((prevState) => {\r\n        const nextState = { ...prevState };\r\n        const { position, index } = findToast(nextState, id);\r\n        if (position && index !== -1) {\r\n          nextState[position][index] = {\r\n            ...nextState[position][index],\r\n            ...options,\r\n            message: createRenderToast(options)\r\n          };\r\n        }\r\n        return nextState;\r\n      });\r\n    },\r\n    closeAll: ({ positions } = {}) => {\r\n      setState((prev) => {\r\n        const allPositions = [\r\n          \"bottom\",\r\n          \"bottom-right\",\r\n          \"bottom-left\",\r\n          \"top\",\r\n          \"top-left\",\r\n          \"top-right\"\r\n        ];\r\n        const positionsToClose = positions ?? allPositions;\r\n        return positionsToClose.reduce(\r\n          (acc, position) => {\r\n            acc[position] = prev[position].map((toast) => ({\r\n              ...toast,\r\n              requestClose: true\r\n            }));\r\n            return acc;\r\n          },\r\n          { ...prev }\r\n        );\r\n      });\r\n    },\r\n    close: (id) => {\r\n      setState((prevState) => {\r\n        const position = getToastPosition(prevState, id);\r\n        if (!position)\r\n          return prevState;\r\n        return {\r\n          ...prevState,\r\n          [position]: prevState[position].map((toast) => {\r\n            if (toast.id == id) {\r\n              return {\r\n                ...toast,\r\n                requestClose: true\r\n              };\r\n            }\r\n            return toast;\r\n          })\r\n        };\r\n      });\r\n    },\r\n    isActive: (id) => Boolean(findToast(toastStore.getState(), id).position)\r\n  };\r\n}\r\nlet counter = 0;\r\nfunction createToast(message, options = {}) {\r\n  counter += 1;\r\n  const id = options.id ?? counter;\r\n  const position = options.position ?? \"bottom\";\r\n  return {\r\n    id,\r\n    message,\r\n    position,\r\n    duration: options.duration,\r\n    onCloseComplete: options.onCloseComplete,\r\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\r\n    status: options.status,\r\n    requestClose: false,\r\n    containerStyle: options.containerStyle\r\n  };\r\n}\r\n\r\nexport { toastStore };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}