{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { Skeleton } from './skeleton.mjs';\nimport { useBreakpointValue } from '../media-query/use-breakpoint-value.mjs';\nimport { chakra } from '../system/factory.mjs';\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nconst defaultNoOfLines = 3;\nconst SkeletonText = props => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */jsx(chakra.div, {\n    className: _className,\n    ...rest,\n    children: numbers.map((number, index) => {\n      if (isLoaded && index > 0) {\n        return null;\n      }\n      const sizeProps = isLoaded ? null : {\n        mb: number === numbers.length ? \"0\" : spacing,\n        width: getWidth(number),\n        height: skeletonHeight\n      };\n      return /* @__PURE__ */jsx(Skeleton, {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        // allows animating the children\n        children: index === 0 ? children : void 0\n      }, numbers.length.toString() + number);\n    })\n  });\n};\nSkeletonText.displayName = \"SkeletonText\";\nexport { SkeletonText };","map":{"version":3,"names":["jsx","cx","Skeleton","useBreakpointValue","chakra","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","props","noOfLines","spacing","skeletonHeight","className","startColor","endColor","isLoaded","fadeDuration","speed","variant","size","colorScheme","children","rest","noOfLinesValue","numbers","getWidth","length","_className","div","number","sizeProps","mb","width","height","toString","displayName"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/node_modules/@chakra-ui/react/dist/esm/skeleton/skeleton-text.mjs"],"sourcesContent":["'use client';\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport { cx } from '@chakra-ui/utils';\r\nimport { Skeleton } from './skeleton.mjs';\r\nimport { useBreakpointValue } from '../media-query/use-breakpoint-value.mjs';\r\nimport { chakra } from '../system/factory.mjs';\r\n\r\nfunction range(count) {\r\n  return Array(count).fill(1).map((_, index) => index + 1);\r\n}\r\nconst defaultNoOfLines = 3;\r\nconst SkeletonText = (props) => {\r\n  const {\r\n    noOfLines = defaultNoOfLines,\r\n    spacing = \"0.5rem\",\r\n    skeletonHeight = \"0.5rem\",\r\n    className,\r\n    startColor,\r\n    endColor,\r\n    isLoaded,\r\n    fadeDuration,\r\n    speed,\r\n    variant,\r\n    size,\r\n    colorScheme,\r\n    children,\r\n    ...rest\r\n  } = props;\r\n  const noOfLinesValue = useBreakpointValue(\r\n    typeof noOfLines === \"number\" ? [noOfLines] : noOfLines\r\n  ) || defaultNoOfLines;\r\n  const numbers = range(noOfLinesValue);\r\n  const getWidth = (index) => {\r\n    if (noOfLinesValue > 1) {\r\n      return index === numbers.length ? \"80%\" : \"100%\";\r\n    }\r\n    return \"100%\";\r\n  };\r\n  const _className = cx(\"chakra-skeleton__group\", className);\r\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, children: numbers.map((number, index) => {\r\n    if (isLoaded && index > 0) {\r\n      return null;\r\n    }\r\n    const sizeProps = isLoaded ? null : {\r\n      mb: number === numbers.length ? \"0\" : spacing,\r\n      width: getWidth(number),\r\n      height: skeletonHeight\r\n    };\r\n    return /* @__PURE__ */ jsx(\r\n      Skeleton,\r\n      {\r\n        startColor,\r\n        endColor,\r\n        isLoaded,\r\n        fadeDuration,\r\n        speed,\r\n        variant,\r\n        size,\r\n        colorScheme,\r\n        ...sizeProps,\r\n        // allows animating the children\r\n        children: index === 0 ? children : void 0\r\n      },\r\n      numbers.length.toString() + number\r\n    );\r\n  }) });\r\n};\r\nSkeletonText.displayName = \"SkeletonText\";\r\n\r\nexport { SkeletonText };\r\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,OAAOC,KAAK,CAACD,KAAK,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;AAC1D;AACA,MAAMC,gBAAgB,GAAG,CAAC;AAC1B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM;IACJC,SAAS,GAAGH,gBAAgB;IAC5BI,OAAO,GAAG,QAAQ;IAClBC,cAAc,GAAG,QAAQ;IACzBC,SAAS;IACTC,UAAU;IACVC,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,OAAO;IACPC,IAAI;IACJC,WAAW;IACXC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGd,KAAK;EACT,MAAMe,cAAc,GAAG1B,kBAAkB,CACvC,OAAOY,SAAS,KAAK,QAAQ,GAAG,CAACA,SAAS,CAAC,GAAGA,SAChD,CAAC,IAAIH,gBAAgB;EACrB,MAAMkB,OAAO,GAAGzB,KAAK,CAACwB,cAAc,CAAC;EACrC,MAAME,QAAQ,GAAIpB,KAAK,IAAK;IAC1B,IAAIkB,cAAc,GAAG,CAAC,EAAE;MACtB,OAAOlB,KAAK,KAAKmB,OAAO,CAACE,MAAM,GAAG,KAAK,GAAG,MAAM;IAClD;IACA,OAAO,MAAM;EACf,CAAC;EACD,MAAMC,UAAU,GAAGhC,EAAE,CAAC,wBAAwB,EAAEiB,SAAS,CAAC;EAC1D,OAAO,eAAgBlB,GAAG,CAACI,MAAM,CAAC8B,GAAG,EAAE;IAAEhB,SAAS,EAAEe,UAAU;IAAE,GAAGL,IAAI;IAAED,QAAQ,EAAEG,OAAO,CAACrB,GAAG,CAAC,CAAC0B,MAAM,EAAExB,KAAK,KAAK;MAChH,IAAIU,QAAQ,IAAIV,KAAK,GAAG,CAAC,EAAE;QACzB,OAAO,IAAI;MACb;MACA,MAAMyB,SAAS,GAAGf,QAAQ,GAAG,IAAI,GAAG;QAClCgB,EAAE,EAAEF,MAAM,KAAKL,OAAO,CAACE,MAAM,GAAG,GAAG,GAAGhB,OAAO;QAC7CsB,KAAK,EAAEP,QAAQ,CAACI,MAAM,CAAC;QACvBI,MAAM,EAAEtB;MACV,CAAC;MACD,OAAO,eAAgBjB,GAAG,CACxBE,QAAQ,EACR;QACEiB,UAAU;QACVC,QAAQ;QACRC,QAAQ;QACRC,YAAY;QACZC,KAAK;QACLC,OAAO;QACPC,IAAI;QACJC,WAAW;QACX,GAAGU,SAAS;QACZ;QACAT,QAAQ,EAAEhB,KAAK,KAAK,CAAC,GAAGgB,QAAQ,GAAG,KAAK;MAC1C,CAAC,EACDG,OAAO,CAACE,MAAM,CAACQ,QAAQ,CAAC,CAAC,GAAGL,MAC9B,CAAC;IACH,CAAC;EAAE,CAAC,CAAC;AACP,CAAC;AACDtB,YAAY,CAAC4B,WAAW,GAAG,cAAc;AAEzC,SAAS5B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}