{"ast":null,"code":"'use client';\n\nimport { useState, useCallback } from 'react';\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return {\n    ref: refCallback,\n    type\n  };\n}\nexport { useButtonType };","map":{"version":3,"names":["useState","useCallback","useButtonType","value","isButton","setIsButton","refCallback","node","tagName","type","ref"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/node_modules/@chakra-ui/react/dist/esm/button/use-button-type.mjs"],"sourcesContent":["'use client';\r\nimport { useState, useCallback } from 'react';\r\n\r\nfunction useButtonType(value) {\r\n  const [isButton, setIsButton] = useState(!value);\r\n  const refCallback = useCallback((node) => {\r\n    if (!node)\r\n      return;\r\n    setIsButton(node.tagName === \"BUTTON\");\r\n  }, []);\r\n  const type = isButton ? \"button\" : void 0;\r\n  return { ref: refCallback, type };\r\n}\r\n\r\nexport { useButtonType };\r\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAACG,KAAK,CAAC;EAChD,MAAMG,WAAW,GAAGL,WAAW,CAAEM,IAAI,IAAK;IACxC,IAAI,CAACA,IAAI,EACP;IACFF,WAAW,CAACE,IAAI,CAACC,OAAO,KAAK,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,IAAI,GAAGL,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC;EACzC,OAAO;IAAEM,GAAG,EAAEJ,WAAW;IAAEG;EAAK,CAAC;AACnC;AAEA,SAASP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}