{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INTEL\\\\PickRound\\\\pickround-frontend\\\\src\\\\RandomPickerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Heading, Text, Button, useColorModeValue, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomPickerPage() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [randomTeam, setRandomTeam] = useState(null);\n\n  // Fetch teams from backend\n  useEffect(() => {\n    const fetchTeams = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/teams\");\n        const data = await response.json();\n        console.log(\"Fetched teams:\", data); // Log pentru verificarea structurii\n        setTeams(data.activeTeams || []);\n        setHistory(data.selectedTeams || []);\n      } catch (error) {\n        console.error(\"Failed to fetch teams:\", error);\n      }\n    };\n    fetchTeams();\n  }, []);\n  const handleTeamSelect = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/random\", {\n        method: \"POST\"\n      });\n      const data = await response.json();\n      console.log(\"Random team selected:\", data); // Log pentru verificarea datelor\n\n      setRandomTeam(data.selectedTeam || null);\n      setTeams(data.remainingTeams || []);\n      setHistory(data.selectedTeams || []);\n    } catch (error) {\n      console.error(\"Failed to select a team:\", error);\n    }\n  };\n  const handleReset = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/teams\");\n      const data = await response.json();\n      console.log(\"Reset teams:\", data); // Log pentru verificarea resetÄƒrii\n      setTeams(data.activeTeams || []);\n      setHistory([]);\n      setRandomTeam(null);\n    } catch (error) {\n      console.error(\"Failed to reset teams:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 8,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: 4,\n      color: useColorModeValue(\"teal.600\", \"teal.300\"),\n      children: \"\\uD83C\\uDFAF Random Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify({\n        teams,\n        history,\n        randomTeam\n      }, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      mt: 8,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Available Teams:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), teams.map(team => /*#__PURE__*/_jsxDEV(Text, {\n        children: team.name\n      }, team.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)), randomTeam && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        fontWeight: \"bold\",\n        color: \"green.500\",\n        children: [\"Selected Team: \", randomTeam.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: handleTeamSelect,\n        children: \"Select Random Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"red\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        mt: 8,\n        children: \"Selected Teams History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), history.map((entry, index) => /*#__PURE__*/_jsxDEV(Text, {\n        children: [entry.name, \" - \", entry.date || \"No date available\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(RandomPickerPage, \"w4nCVYGY8yn82v7rqNzzxAJzjmA=\", false, function () {\n  return [useColorModeValue];\n});\n_c = RandomPickerPage;\nexport default RandomPickerPage;\nvar _c;\n$RefreshReg$(_c, \"RandomPickerPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Text","Button","useColorModeValue","VStack","jsxDEV","_jsxDEV","RandomPickerPage","_s","teams","setTeams","history","setHistory","randomTeam","setRandomTeam","fetchTeams","response","fetch","data","json","console","log","activeTeams","selectedTeams","error","handleTeamSelect","method","selectedTeam","remainingTeams","handleReset","p","children","mb","color","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","spacing","mt","size","map","team","name","id","fontSize","fontWeight","colorScheme","onClick","entry","index","date","_c","$RefreshReg$"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/src/RandomPickerPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  useColorModeValue,\r\n  VStack,\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction RandomPickerPage() {\r\n  const [teams, setTeams] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [randomTeam, setRandomTeam] = useState(null);\r\n\r\n  // Fetch teams from backend\r\n  useEffect(() => {\r\n    const fetchTeams = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/teams\");\r\n        const data = await response.json();\r\n        console.log(\"Fetched teams:\", data); // Log pentru verificarea structurii\r\n        setTeams(data.activeTeams || []);\r\n        setHistory(data.selectedTeams || []);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch teams:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTeams();\r\n  }, []);\r\n\r\n  const handleTeamSelect = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/random\", {\r\n        method: \"POST\",\r\n      });\r\n      const data = await response.json();\r\n      console.log(\"Random team selected:\", data); // Log pentru verificarea datelor\r\n\r\n      setRandomTeam(data.selectedTeam || null);\r\n      setTeams(data.remainingTeams || []);\r\n      setHistory(data.selectedTeams || []);\r\n    } catch (error) {\r\n      console.error(\"Failed to select a team:\", error);\r\n    }\r\n  };\r\n\r\n  const handleReset = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/teams\");\r\n      const data = await response.json();\r\n      console.log(\"Reset teams:\", data); // Log pentru verificarea resetÄƒrii\r\n      setTeams(data.activeTeams || []);\r\n      setHistory([]);\r\n      setRandomTeam(null);\r\n    } catch (error) {\r\n      console.error(\"Failed to reset teams:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={8}>\r\n      <Heading mb={4} color={useColorModeValue(\"teal.600\", \"teal.300\")}>\r\n        ðŸŽ¯ Random Picker\r\n      </Heading>\r\n\r\n      {/* Date brute pentru debugging */}\r\n      <pre>{JSON.stringify({ teams, history, randomTeam }, null, 2)}</pre>\r\n\r\n      <VStack spacing={4} mt={8}>\r\n        {/* Lista echipelor */}\r\n        <Heading size=\"md\">Available Teams:</Heading>\r\n        {teams.map((team) => (\r\n          <Text key={team.id}>{team.name}</Text>\r\n        ))}\r\n\r\n        {/* Echipa selectatÄƒ */}\r\n        {randomTeam && (\r\n          <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"green.500\">\r\n            Selected Team: {randomTeam.name}\r\n          </Text>\r\n        )}\r\n\r\n        {/* Butoane */}\r\n        <Button colorScheme=\"blue\" onClick={handleTeamSelect}>\r\n          Select Random Team\r\n        </Button>\r\n        <Button colorScheme=\"red\" onClick={handleReset}>\r\n          Reset\r\n        </Button>\r\n\r\n        {/* Istoric */}\r\n        <Heading size=\"md\" mt={8}>\r\n          Selected Teams History:\r\n        </Heading>\r\n        {history.map((entry, index) => (\r\n          <Text key={index}>\r\n            {entry.name} - {entry.date || \"No date available\"}\r\n          </Text>\r\n        ))}\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RandomPickerPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}