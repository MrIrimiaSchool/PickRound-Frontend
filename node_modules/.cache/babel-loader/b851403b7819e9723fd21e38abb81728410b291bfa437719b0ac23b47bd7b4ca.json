{"ast":null,"code":"import React,{useState}from\"react\";import{Wheel}from\"react-custom-roulette\";import{VStack,Button,Text}from\"@chakra-ui/react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RouletteWheel=_ref=>{let{teams=[],onSelect=()=>{}}=_ref;const[mustSpin,setMustSpin]=useState(false);const[prizeNumber,setPrizeNumber]=useState(0);// Verificăm dacă teams este valid\nconst data=Array.isArray(teams)?teams.map(team=>({option:team})):[];const handleSpin=()=>{if(data.length===0)return;// Prevenim eroarea dacă nu există echipe\nconst randomIndex=Math.floor(Math.random()*data.length);setPrizeNumber(randomIndex);setMustSpin(true);};const handleStop=()=>{setMustSpin(false);if(data.length>0){onSelect(teams[prizeNumber]);// Notificăm echipa selectată\n}};return/*#__PURE__*/_jsxs(VStack,{spacing:6,children:[data.length>0?/*#__PURE__*/_jsx(Wheel,{mustStartSpinning:mustSpin,prizeNumber:prizeNumber,data:data,backgroundColors:[\"#6875F5\",\"#202124\"],textColors:[\"#ffffff\"],onStopSpinning:handleStop,outerBorderColor:\"#000000\",outerBorderWidth:5,radiusLineColor:\"#000000\",radiusLineWidth:2,fontSize:18,spinDuration:0.2,disableInitialAnimation:true}):/*#__PURE__*/_jsx(Text,{color:\"red.500\",fontSize:\"xl\",children:\"No teams available to spin.\"}),/*#__PURE__*/_jsx(Button,{colorScheme:\"teal\",onClick:handleSpin,isDisabled:data.length===0,children:\"Spin the Wheel\"})]});};export default RouletteWheel;","map":{"version":3,"names":["React","useState","Wheel","VStack","Button","Text","jsx","_jsx","jsxs","_jsxs","RouletteWheel","_ref","teams","onSelect","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","data","Array","isArray","map","team","option","handleSpin","length","randomIndex","Math","floor","random","handleStop","spacing","children","mustStartSpinning","backgroundColors","textColors","onStopSpinning","outerBorderColor","outerBorderWidth","radiusLineColor","radiusLineWidth","fontSize","spinDuration","disableInitialAnimation","color","colorScheme","onClick","isDisabled"],"sources":["C:/Users/INTEL/PickRound/pickround-frontend/src/RouletteWheel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\nimport { VStack, Button, Text } from \"@chakra-ui/react\";\r\n\r\nconst RouletteWheel = ({ teams = [], onSelect = () => {} }) => {\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [prizeNumber, setPrizeNumber] = useState(0);\r\n\r\n  // Verificăm dacă teams este valid\r\n  const data = Array.isArray(teams)\r\n    ? teams.map((team) => ({ option: team }))\r\n    : [];\r\n\r\n  const handleSpin = () => {\r\n    if (data.length === 0) return; // Prevenim eroarea dacă nu există echipe\r\n    const randomIndex = Math.floor(Math.random() * data.length);\r\n    setPrizeNumber(randomIndex);\r\n    setMustSpin(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setMustSpin(false);\r\n    if (data.length > 0) {\r\n      onSelect(teams[prizeNumber]); // Notificăm echipa selectată\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing={6}>\r\n      {data.length > 0 ? (\r\n        <Wheel\r\n          mustStartSpinning={mustSpin}\r\n          prizeNumber={prizeNumber}\r\n          data={data}\r\n          backgroundColors={[\"#6875F5\", \"#202124\"]}\r\n          textColors={[\"#ffffff\"]}\r\n          onStopSpinning={handleStop}\r\n          outerBorderColor=\"#000000\"\r\n          outerBorderWidth={5}\r\n          radiusLineColor=\"#000000\"\r\n          radiusLineWidth={2}\r\n          fontSize={18}\r\n          spinDuration={0.2}\r\n          disableInitialAnimation={true}\r\n        />\r\n      ) : (\r\n        <Text color=\"red.500\" fontSize=\"xl\">\r\n          No teams available to spin.\r\n        </Text>\r\n      )}\r\n      <Button colorScheme=\"teal\" onClick={handleSpin} isDisabled={data.length === 0}>\r\n        Spin the Wheel\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default RouletteWheel;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,KAAK,KAAQ,uBAAuB,CAC7C,OAASC,MAAM,CAAEC,MAAM,CAAEC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,KAAK,CAAG,EAAE,CAAEC,QAAQ,CAAGA,CAAA,GAAM,CAAC,CAAE,CAAC,CAAAF,IAAA,CACxD,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACe,WAAW,CAAEC,cAAc,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAAC,CAEjD;AACA,KAAM,CAAAiB,IAAI,CAAGC,KAAK,CAACC,OAAO,CAACR,KAAK,CAAC,CAC7BA,KAAK,CAACS,GAAG,CAAEC,IAAI,GAAM,CAAEC,MAAM,CAAED,IAAK,CAAC,CAAC,CAAC,CACvC,EAAE,CAEN,KAAM,CAAAE,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIN,IAAI,CAACO,MAAM,GAAK,CAAC,CAAE,OAAQ;AAC/B,KAAM,CAAAC,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGX,IAAI,CAACO,MAAM,CAAC,CAC3DR,cAAc,CAACS,WAAW,CAAC,CAC3BX,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,CAED,KAAM,CAAAe,UAAU,CAAGA,CAAA,GAAM,CACvBf,WAAW,CAAC,KAAK,CAAC,CAClB,GAAIG,IAAI,CAACO,MAAM,CAAG,CAAC,CAAE,CACnBZ,QAAQ,CAACD,KAAK,CAACI,WAAW,CAAC,CAAC,CAAE;AAChC,CACF,CAAC,CAED,mBACEP,KAAA,CAACN,MAAM,EAAC4B,OAAO,CAAE,CAAE,CAAAC,QAAA,EAChBd,IAAI,CAACO,MAAM,CAAG,CAAC,cACdlB,IAAA,CAACL,KAAK,EACJ+B,iBAAiB,CAAEnB,QAAS,CAC5BE,WAAW,CAAEA,WAAY,CACzBE,IAAI,CAAEA,IAAK,CACXgB,gBAAgB,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,CACzCC,UAAU,CAAE,CAAC,SAAS,CAAE,CACxBC,cAAc,CAAEN,UAAW,CAC3BO,gBAAgB,CAAC,SAAS,CAC1BC,gBAAgB,CAAE,CAAE,CACpBC,eAAe,CAAC,SAAS,CACzBC,eAAe,CAAE,CAAE,CACnBC,QAAQ,CAAE,EAAG,CACbC,YAAY,CAAE,GAAI,CAClBC,uBAAuB,CAAE,IAAK,CAC/B,CAAC,cAEFpC,IAAA,CAACF,IAAI,EAACuC,KAAK,CAAC,SAAS,CAACH,QAAQ,CAAC,IAAI,CAAAT,QAAA,CAAC,6BAEpC,CAAM,CACP,cACDzB,IAAA,CAACH,MAAM,EAACyC,WAAW,CAAC,MAAM,CAACC,OAAO,CAAEtB,UAAW,CAACuB,UAAU,CAAE7B,IAAI,CAACO,MAAM,GAAK,CAAE,CAAAO,QAAA,CAAC,gBAE/E,CAAQ,CAAC,EACH,CAAC,CAEb,CAAC,CAED,cAAe,CAAAtB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}